{"version":3,"sources":["pages/Home.js","pages/Login.js","pages/Register.js","pages/Games.js","socket.js","pages/Chat.js","pages/Game.js","App.js","index.js"],"names":["Home","navigate","useNavigate","_jsxs","children","_jsx","onClick","async","token","localStorage","getItem","console","error","response","axios","post","headers","gameId","data","concat","Login","formData","setFormData","useState","email","password","onChange","e","target","name","value","onSubmit","preventDefault","res","setItem","err","type","placeholder","required","Register","Games","games","setGames","setError","API_URL","process","REACT_APP_API_URL","useEffect","get","fetchGames","map","game","player1","player2","result","_id","socket","io","autoConnect","query","on","log","Chat","_ref","messages","setMessages","message","setMessage","emit","prevMessages","off","List","msg","index","ListItem","ListItemText","primary","text","TextField","fullWidth","margin","Button","variant","color","Game","useParams","setGame","Chess","connect","move","newGame","fen","disconnect","savedGame","boardState","fetchGame","Chessboard","position","onPieceDrop","sourceSquare","targetSquare","handleMove","from","to","promotion","in_checkmate","turn","in_draw","handleResult","App","Router","basename","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.818d507b.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const createGame = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post('https://tfg-back.onrender.com/api/games/create', {}, {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        }\r\n      });\r\n      const { gameId } = response.data;\r\n      navigate(`/game/${gameId}`);\r\n    } catch (error) {\r\n      console.error('Error creating game', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to FESACHESS</h1>\r\n      <button onClick={createGame}>Create New Game</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('https://tfg-back.onrender.com/api/auth/login', formData);\r\n      localStorage.setItem('token', res.data.token);\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.error(err.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { name, email, password } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('https://tfg-back.onrender.com/api/auth/register', formData);\r\n      localStorage.setItem('token', res.data.token);\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.error(err.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Games = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n    const fetchGames = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`${API_URL}/api/games/mygames`, {\r\n          headers: { 'x-auth-token': token }\r\n        });\r\n        setGames(response.data);\r\n      } catch (error) {\r\n        setError('Error fetching games');\r\n      }\r\n    };\r\n\r\n    fetchGames();\r\n  }, [API_URL]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Games</h1>\r\n      {error && <p>{error}</p>}\r\n      <ul>\r\n        {games.map((game) => (\r\n          <li key={game._id}>\r\n            Game between {game.player1} and {game.player2} - Result: {game.result}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","import { io } from 'socket.io-client';\r\n\r\nconst SOCKET_URL = 'http://localhost:5000'; // Asegúrate de que el puerto coincida con el backend\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport const socket = io(SOCKET_URL, {\r\n  autoConnect: false,\r\n  query: { token },\r\n});\r\n\r\nsocket.on('connect', () => {\r\n  console.log('Connected to socket.io server');\r\n});\r\n\r\nsocket.on('disconnect', () => {\r\n  console.log('Disconnected from socket.io server');\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { socket } from '../socket';\r\nimport { TextField, Button, List, ListItem, ListItemText } from '@mui/material';\r\n\r\nconst Chat = ({ gameId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    socket.emit('joinGame', gameId);\r\n\r\n    socket.on('message', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('leaveGame', gameId);\r\n      socket.off('message');\r\n    };\r\n  }, [gameId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('sendMessage', { gameId, text: message });\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {messages.map((msg, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemText primary={msg.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <form onSubmit={sendMessage}>\r\n        <TextField\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { socket } from '../socket';\r\nimport { useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\nimport axios from 'axios';\r\n\r\nconst Game = () => {\r\n  const { gameId } = useParams(); // Obtener el gameId de la URL\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  useEffect(() => {\r\n    socket.connect();\r\n\r\n    socket.emit('joinGame', gameId);\r\n\r\n    socket.on('move', (move) => {\r\n      const newGame = new Chess(game.fen());\r\n      newGame.move(move);\r\n      setGame(newGame);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [game, gameId]);\r\n\r\n  useEffect(() => {\r\n    const fetchGame = async () => {\r\n      const response = await axios.get(`https://tfg-back.onrender.com/api/games/${gameId}`, {\r\n        headers: {\r\n          'x-auth-token': localStorage.getItem('token'),\r\n        }\r\n      });\r\n      const savedGame = new Chess(response.data.boardState);\r\n      setGame(savedGame);\r\n    };\r\n\r\n    fetchGame();\r\n  }, [gameId]);\r\n\r\n  const handleResult = (game) => {\r\n    if (game.in_checkmate()) {\r\n      if (game.turn() === 'b') {\r\n        // Player 1 (white) wins\r\n        return 'player1';\r\n      } else {\r\n        // Player 2 (black) wins\r\n        return 'player2';\r\n      }\r\n    } else if (game.in_draw()) {\r\n      return 'draw';\r\n    }\r\n    return 'ongoing';\r\n  };\r\n\r\n  const handleMove = (sourceSquare, targetSquare) => {\r\n    const newGame = new Chess(game.fen());\r\n    const move = newGame.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: 'q',\r\n    });\r\n    if (move === null) return;\r\n\r\n    const result = handleResult(newGame);\r\n    setGame(newGame);\r\n    socket.emit('move', { gameId, move, fen: newGame.fen(), turn: newGame.turn(), result });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Game</h1>\r\n      <Chessboard\r\n        position={game.fen()}\r\n        onPieceDrop={(sourceSquare, targetSquare) => handleMove(sourceSquare, targetSquare)}\r\n      />\r\n      <Chat gameId={gameId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Games from './pages/Games';\r\nimport Game from './pages/Game';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/games\" element={<Games />} />\r\n        <Route path=\"/game/:gameId\" element={<Game />} /> {/* Actualizado */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
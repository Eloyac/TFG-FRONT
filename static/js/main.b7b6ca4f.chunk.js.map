{"version":3,"sources":["pages/Home.js","pages/Login.js","pages/Register.js","pages/Games.js","socket.js","pages/Chat.js","pages/Game.js","App.js","index.js"],"names":["Home","navigate","useNavigate","_jsxs","children","_jsx","onClick","async","token","localStorage","getItem","console","error","response","axios","post","headers","gameId","data","concat","Login","email","setEmail","useState","password","setPassword","onSubmit","e","preventDefault","res","process","log","setItem","err","type","value","onChange","target","Register","name","setName","Games","games","setGames","setError","API_URL","useEffect","get","fetchGames","map","game","player1","player2","result","_id","socket","io","autoConnect","query","on","Chat","_ref","messages","setMessages","message","setMessage","emit","prevMessages","off","List","msg","index","ListItem","ListItemText","primary","text","TextField","fullWidth","margin","Button","variant","color","Game","useParams","setGame","Chess","connect","move","newGame","fen","disconnect","savedGame","boardState","fetchGame","Chessboard","position","onPieceDrop","sourceSquare","targetSquare","handleMove","from","to","promotion","in_checkmate","turn","in_draw","handleResult","App","Router","basename","Routes","Route","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b6ca4f.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const createGame = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token'); // Obtener el token del localStorage\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post('https://tfg-back.onrender.com/api/games/create', {}, {\r\n        headers: {\r\n          'x-auth-token': token, // Enviar el token en los encabezados de la solicitud\r\n        }\r\n      });\r\n      const { gameId } = response.data;\r\n      navigate(`/game/${gameId}`);\r\n    } catch (error) {\r\n      console.error('Error creating game', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to FESACHESS</h1>\r\n      <button onClick={createGame}>Create New Game</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/auth/login`, { email, password });\r\n      console.log(res.data);\r\n      // Almacena el token JWT en el localStorage o maneja el login de otra manera\r\n      localStorage.setItem('token', res.data.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/api/auth/register`, { name, email, password });\r\n      console.log(res.data);\r\n      // Almacena el token JWT en el localStorage o maneja el registro de otra manera\r\n      localStorage.setItem('token', res.data.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Register</h1>\r\n      <form onSubmit={handleRegister}>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Games = () => {\r\n  const [games, setGames] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL;\r\n\r\n  useEffect(() => {\r\n    const fetchGames = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`${API_URL}/api/games/mygames`, {\r\n          headers: { 'x-auth-token': token }\r\n        });\r\n        setGames(response.data);\r\n      } catch (error) {\r\n        setError('Error fetching games');\r\n      }\r\n    };\r\n\r\n    fetchGames();\r\n  }, [API_URL]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Games</h1>\r\n      {error && <p>{error}</p>}\r\n      <ul>\r\n        {games.map((game) => (\r\n          <li key={game._id}>\r\n            Game between {game.player1} and {game.player2} - Result: {game.result}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","import { io } from 'socket.io-client';\r\n\r\nconst SOCKET_URL = 'http://localhost:5000'; // Asegúrate de que el puerto coincida con el backend\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport const socket = io(SOCKET_URL, {\r\n  autoConnect: false,\r\n  query: { token },\r\n});\r\n\r\nsocket.on('connect', () => {\r\n  console.log('Connected to socket.io server');\r\n});\r\n\r\nsocket.on('disconnect', () => {\r\n  console.log('Disconnected from socket.io server');\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { socket } from '../socket';\r\nimport { TextField, Button, List, ListItem, ListItemText } from '@mui/material';\r\n\r\nconst Chat = ({ gameId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    socket.emit('joinGame', gameId);\r\n\r\n    socket.on('message', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('leaveGame', gameId);\r\n      socket.off('message');\r\n    };\r\n  }, [gameId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('sendMessage', { gameId, text: message });\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {messages.map((msg, index) => (\r\n          <ListItem key={index}>\r\n            <ListItemText primary={msg.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <form onSubmit={sendMessage}>\r\n        <TextField\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { socket } from '../socket';\r\nimport { useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\nimport axios from 'axios';\r\n\r\nconst Game = () => {\r\n  const { gameId } = useParams(); // Obtener el gameId de la URL\r\n  const [game, setGame] = useState(new Chess());\r\n\r\n  useEffect(() => {\r\n    socket.connect();\r\n\r\n    socket.emit('joinGame', gameId);\r\n\r\n    socket.on('move', (move) => {\r\n      const newGame = new Chess(game.fen());\r\n      newGame.move(move);\r\n      setGame(newGame);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [game, gameId]);\r\n\r\n  useEffect(() => {\r\n    const fetchGame = async () => {\r\n      const response = await axios.get(`https://tfg-back.onrender.com/api/games/${gameId}`, {\r\n        headers: {\r\n          'x-auth-token': localStorage.getItem('token'),\r\n        }\r\n      });\r\n      const savedGame = new Chess(response.data.boardState);\r\n      setGame(savedGame);\r\n    };\r\n\r\n    fetchGame();\r\n  }, [gameId]);\r\n\r\n  const handleResult = (game) => {\r\n    if (game.in_checkmate()) {\r\n      if (game.turn() === 'b') {\r\n        // Player 1 (white) wins\r\n        return 'player1';\r\n      } else {\r\n        // Player 2 (black) wins\r\n        return 'player2';\r\n      }\r\n    } else if (game.in_draw()) {\r\n      return 'draw';\r\n    }\r\n    return 'ongoing';\r\n  };\r\n\r\n  const handleMove = (sourceSquare, targetSquare) => {\r\n    const newGame = new Chess(game.fen());\r\n    const move = newGame.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: 'q',\r\n    });\r\n    if (move === null) return;\r\n\r\n    const result = handleResult(newGame);\r\n    setGame(newGame);\r\n    socket.emit('move', { gameId, move, fen: newGame.fen(), turn: newGame.turn(), result });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Game</h1>\r\n      <Chessboard\r\n        position={game.fen()}\r\n        onPieceDrop={(sourceSquare, targetSquare) => handleMove(sourceSquare, targetSquare)}\r\n      />\r\n      <Chat gameId={gameId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Register from './pages/Register';\r\nimport Games from './pages/Games';\r\nimport Game from './pages/Game';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/games\" element={<Games />} />\r\n        <Route path=\"/game/:gameId\" element={<Game />} /> {/* Actualizado */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}